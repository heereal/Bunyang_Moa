import Head from 'next/head';
import HomeList from '@/components/MainPage/HomeList';
import HeadTitle from '@/components/GlobalComponents/HeadTitle/HeadTitle';
import { GetStaticProps } from 'next';
import axios from 'axios';
import { useState } from 'react';

// 1. 전체리스트 및 상세리스트 불러오기
// 2. 전체리스트 + 상세리스트 합치기
// 3. 카테고리별 분류 - 지역
// 4. 카테고리별 분류 -

const MainPage = (props: any) => {
  const { homeList } = props;

  return (
    <>
      <Head>
        <HeadTitle title="" />
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div>
        <div>오늘 청약</div>
        <div>청약 임박</div>
        <div>무순위</div>
      </div>

      <div>
        <button>오늘 청약</button>
        <button>청약 임박</button>
        <button>무순위</button>
      </div>
      <div>
        {/* TODO: props로 넘겨주지 않고 각 컴포넌트에서 실행하기? */}
        {homeList.map((item: any) => (
          <HomeList key={item.PBLANC_NO} home={item} />
        ))}
      </div>
    </>
  );
};

export const getStaticProps: GetStaticProps = async () => {
  const BASE_URL = 'https://api.odcloud.kr/api/ApplyhomeInfoDetailSvc/v1';
  const METHOD_APT_ALL = 'getAPTLttotPblancDetail';
  const METHOD_APT_DETAIL = 'getAPTLttotPblancMdl';
  const SERVICE_KEY = process.env.NEXT_PUBLIC_HOME_API_KEY;

  // 공고문 리스트 가져오기
  const defaultList = await axios
    .get(
      `${BASE_URL}/${METHOD_APT_ALL}?page=1&perPage=1500&&cond%5BRCRIT_PBLANC_DE%3A%3AGTE%5D=2023-01-01&serviceKey=${SERVICE_KEY}`,
    )
    .then((res) => res.data.data);

  // 공고문 상세정보 전체 리스트 가져오기
  const detailList = await axios
    .get(
      `${BASE_URL}/${METHOD_APT_DETAIL}?page=1&perPage=10000&serviceKey=${SERVICE_KEY}`,
    )
    .then((res) =>
      res.data.data.filter((item: any) => item.PBLANC_NO >= 2023000000),
    );

  // Default + Detail List 합치기
  const combineHomeList = await Promise.all(
    defaultList.map(async (item: any) => {
      return {
        ...item,
        detail: detailList.filter((i: any) => i.PBLANC_NO === item.PBLANC_NO),
      };
    }),
  );

  return {
    props: {
      homeList: combineHomeList,
    },
    revalidate: 6000,
  };
};

export default MainPage;
