import Head from 'next/head';
import { useSubscription } from '@/hooks';
import { useEffect, useState } from 'react';
import HomeList from '@/components/MainPage/HomeList';
import HeadTitle from '@/components/GlobalComponents/HeadTitle/HeadTitle';
import * as S from './style';

// 1. 전체리스트 및 상세리스트 불러오기
// 2. 전체리스트 + 상세리스트 합치기
// 3. Tab 분류 - 분양 리스트가 없을 때 보여줄 것 추가
// 4. Tab 별 수 count
// 5. 카테고리별 분류 - 지역 및 분양 형태

const MainPage = () => {
  const { homeListHandler, homeList } = useSubscription();
  const [currentTab, SetCurrentTab] = useState(0);

  // 오늘 날짜 구하기
  const postTime = () => {
    const date = new Date();
    const year = date.getFullYear();
    const month = ('0' + (date.getMonth() + 1)).slice(-2);
    const day = ('0' + date.getDate()).slice(-2);
    return year + '-' + month + '-' + day;
  };
  const today = postTime();

  // 청약 가능 리스트
  // TODO: item.RCEPT_BGNDE <= today && item.RCEPT_ENDDE >= today 로 해야 하는데
  // 현재 결과가 없음
  const todayList = homeList.filter((item: any) => item.RCEPT_BGNDE <= today);
  // 청약 임박 리스트
  // TODO: 오늘 날짜보다 얼마나 더 클 때 보여줄 건지 정해야 함
  const comingList = homeList.filter((item: any) => item.RCEPT_BGNDE > today);
  // TODO: 무순위 리스트 - 이름 변경? -선착순..?
  // const randomList? =

  // Tabs(청약 가능, 청약 임박, 무순위)
  const tabList = [
    { name: '청약 가능', content: todayList },
    { name: '청약 임박', content: comingList },
    // TODO: 무순위 api 추가되면 content 변경하기 - 현재는 전체리스트
    { name: '무순위', content: homeList },
  ];

  // 함수가 실행되면 선택된 tab 내용으로 변경
  const clickTabHandler = (index: number) => {
    SetCurrentTab(index);
  };

  useEffect(() => {
    homeListHandler();
  }, []);

  return (
    <>
      <Head>
        <HeadTitle title="" />
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <S.MainSection>
        <div>
          <div>청약 가능</div>
          <div>청약 임박</div>
          <div>무순위</div>
        </div>
        <S.TabRemoteBox>
          {/* Tabs */}
          <S.TabsSection>
            <S.TabMenu>
              {tabList.map((el, index) => (
                <li
                  key={el.name}
                  className={
                    index === currentTab ? 'submenu focused' : 'submenu'
                  }
                  style={{ cursor: 'pointer' }}
                  onClick={() => clickTabHandler(index)}
                >
                  {el.name}
                </li>
              ))}
            </S.TabMenu>

            {tabList[currentTab].content.map((item: any) => {
              // 분양 리스트
              return <HomeList key={item.PBLANC_NO} home={item} />;
            })}
          </S.TabsSection>

          {/* TODO: 리모콘 기능 추가 */}
          <S.RemoteAside>리모콘</S.RemoteAside>
        </S.TabRemoteBox>
      </S.MainSection>
    </>
  );
};

export default MainPage;
